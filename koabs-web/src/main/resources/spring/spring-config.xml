<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- 加载属性配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:db.properties</value>
			</list>
		</property>
	</bean>
	
  	<!-- 定义数据源 -->
  	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="idleConnectionTestPeriod" value="60" />
		<property name="idleMaxAge" value="3" />
		<property name="maxConnectionsPerPartition" value="2" />
		<property name="minConnectionsPerPartition" value="1" />
		<property name="partitionCount" value="1" />
		<property name="acquireIncrement" value="1" />
		<property name="statementsCacheSize" value="100" />
		<property name="releaseHelperThreads" value="3" />
		<!--  
		<property name="logStatementsEnabled" value="true" />
		<property name="acquireRetryAttempts" value="0" />-->
	</bean>
	
  	<!-- Spring JDBC模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 事务管理器 -->
	<bean id="jdbcTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 声明事务管理的方法 -->
	<tx:advice id="txAdvice" transaction-manager="jdbcTransactionManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="page*" read-only="true" />
			<tx:method name="count*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="grid*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- 声明事务管理的范围 指定 service 层的才启用事务 -->
	<aop:config expose-proxy="true">
		<aop:pointcut id="txPointcut" expression="execution(* com.koabs..service..*+.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>
	
	<!-- Mybatis配置 -->
    <bean id="defaultSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations">
            <list>
                <value>classpath:META-INF/mybatis/**/*.xml</value>
            </list>
        </property>
    </bean>
    
	<!-- 系统应用实现 -->
	<!--MapperScannerConfigurer配置 -->
	<!-- 替换了MapperScannerConfigurer 来实现通用Mapper -->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="defaultSqlSessionFactory" />
		<property name="basePackage" value="com.koabs.web"/>
		<property name="properties">
        <value>
            mappers=com.koabs.dao.IBaseDao tk.mybatis.mapper.common.Mapper
        </value>
    </property>
	</bean>
	
	<!-- 组件扫描 -->
	<context:component-scan base-package="com.koabs" />
	
</beans>